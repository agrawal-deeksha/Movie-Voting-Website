[{"C:\\Users\\HP\\Desktop\\Movie-Voting-Website\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\Movie-Voting-Website\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\Movie-Voting-Website\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Desktop\\Movie-Voting-Website\\src\\constants\\config.js":"4","C:\\Users\\HP\\Desktop\\Movie-Voting-Website\\src\\components\\LandingPage.js":"5","C:\\Users\\HP\\Desktop\\Movie-Voting-Website\\src\\components\\Sections\\MainImage.js":"6","C:\\Users\\HP\\Desktop\\Movie-Voting-Website\\src\\components\\Sections\\GridCards.js":"7"},{"size":517,"mtime":1609079768518,"results":"8","hashOfConfig":"9"},{"size":390,"mtime":1609590607294,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1609079768520,"results":"11","hashOfConfig":"9"},{"size":375,"mtime":1609574451369,"results":"12","hashOfConfig":"9"},{"size":3623,"mtime":1609592121906,"results":"13","hashOfConfig":"9"},{"size":1040,"mtime":1609573847091,"results":"14","hashOfConfig":"9"},{"size":1093,"mtime":1609590528978,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"idlapm",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\HP\\Desktop\\Movie-Voting-Website\\src\\index.js",[],["34","35"],"C:\\Users\\HP\\Desktop\\Movie-Voting-Website\\src\\App.js",["36","37","38","39"],"import './App.css';\r\nimport React, { useEffect, useState, useRef } from 'react'\r\nimport {BrowserRouter,Route,Switch} from \"react-router-dom\"\r\nimport LandingPage from './components/LandingPage'\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n       <Route exact link=\"/\" component={LandingPage}/>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\HP\\Desktop\\Movie-Voting-Website\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\Movie-Voting-Website\\src\\constants\\config.js",[],"C:\\Users\\HP\\Desktop\\Movie-Voting-Website\\src\\components\\LandingPage.js",["40","41","42","43","44","45"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport { Typography, Row, Button } from 'antd';\r\nimport {API_KEY,API_URL,IMAGE_BASE_URL, IMAGE_SIZE, POSTER_SIZE} from '../constants/config'\r\nimport {BrowserRouter,Route,Switch} from \"react-router-dom\"\r\nimport MainImage from './Sections/MainImage'\r\nimport GridCard from './Sections/GridCards'\r\nimport { MDBCol, MDBIcon } from \"mdbreact\";\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LandingPage(props){\r\n\r\n    const[movies,setMovies]=useState([]);\r\n    const [search,setSearch]=useState(\"\");\r\n    const [MainMovieImage, setMainMovieImage] = useState(null);\r\n \r\n  useEffect(()=>{\r\n    const uri=`${API_URL}trending/movie/week?api_key=${API_KEY}&language=en-US&page=1`\r\n    fetch(uri)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // console.log('movies',...movies)\r\n       // console.log('result',...data.results)\r\n        // console.log('Data:', data)\r\n        setMovies([...data.results])\r\n        setMainMovieImage(MainMovieImage || data.results[0])\r\n        //console.log(movies)\r\n      })\r\n      .catch(err=>console.log(err))\r\n  \r\n  },[])\r\n  const handleChange=(e)=>{\r\n    setSearch(e.target.value)\r\n \r\n     const uri=`${API_URL}search/movie/?api_key=${API_KEY}&language=en-US&page=1&query=${search}`\r\n     fetch(uri)\r\n       .then((response) => response.json())\r\n       .then((data) => {\r\n         // console.log('movies',...movies)\r\n         console.log('result',...data.results)\r\n         // console.log('Data:', data)\r\n         setMovies([...data.results])\r\n         setMainMovieImage(data.results[0] || MainMovieImage )\r\n         //console.log(movies)\r\n       })\r\n       .catch(err=>console.log(err))\r\n   }\r\n        return(\r\n            <div style={{ width: '100%', margin: '0' }}>\r\n            {MainMovieImage &&\r\n                <MainImage\r\n                    image={`${IMAGE_BASE_URL}${IMAGE_SIZE}${MainMovieImage.backdrop_path}`}\r\n                    title={MainMovieImage.original_title}\r\n                    text={MainMovieImage.overview}\r\n                />\r\n\r\n            }\r\n          <MDBCol md=\"6\">\r\n            <div style={{marginLeft:600,marginTop:10}}>\r\n          <div className=\"input-group md-form form-sm form-1 pl-0\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text purple lighten-3\" id=\"basic-text1\">\r\n                <MDBIcon className=\"text-white\" icon=\"search\" />\r\n              </span>\r\n            </div>\r\n            <input className=\"form-control my-0 py-1\" type=\"text\" size={100} placeholder=\"Search\" aria-label=\"Search\" value={search} onChange={handleChange} />\r\n          </div>\r\n         </div>\r\n        </MDBCol>\r\n\r\n            <div style={{ width: '20%', margin: '1rem auto' }}>\r\n\r\n                <Title level={2} > Movies by latest </Title>\r\n                <hr />\r\n                <Row gutter={[16, 16]}>\r\n                    {movies.map((movie, index) => (\r\n                        <React.Fragment key={index}>\r\n                            <GridCard\r\n                                image={movie.poster_path ?\r\n                                    `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                                    : null}\r\n                                movieId={movie.id}\r\n                                movieName={movie.original_title}\r\n                            />\r\n                        </React.Fragment>\r\n                    ))}\r\n                </Row>\r\n                \r\n\r\n                <br />\r\n           \r\n            </div>\r\n\r\n    </div>\r\n  \r\n        )\r\n    \r\n}\r\n export default LandingPage;","C:\\Users\\HP\\Desktop\\Movie-Voting-Website\\src\\components\\Sections\\MainImage.js",[],"C:\\Users\\HP\\Desktop\\Movie-Voting-Website\\src\\components\\Sections\\GridCards.js",["46","47","48","49"],"import React from 'react'\r\nimport { Card, Avatar, Col, Typography, Row } from 'antd';\r\nimport { IMAGE_BASE_URL } from '../../constants/config';\r\n\r\nfunction GridCards(props) {\r\n\r\n    let { actor, key, image, movieId, movieName, characterName } = props\r\n    const POSTER_SIZE = \"w154\";\r\n\r\n    if (actor) {\r\n        return (\r\n            <Col key={key} lg={6} md={8} xs={200}>\r\n                <div style={{ position: 'relative' }}>\r\n                    <img style={{ width: '100%', height: '320px' }} alt={characterName} src={`${IMAGE_BASE_URL}${POSTER_SIZE}${image}`} />\r\n                </div>\r\n            </Col>\r\n        )\r\n    } else {\r\n        return (\r\n            <Col key={key} lg={6} md={8} xs={24}>\r\n                <div style={{ position: 'relative' }}>\r\n                    <a href={`/movie/${movieId}`} >\r\n                        <img style={{ width: '100%', height: '320px' }} alt={movieName} src={image} />\r\n                        {/* <p>{movieName}</p> */}\r\n                    </a>\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default GridCards",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":17,"nodeType":"56","messageId":"57","endLine":2,"endColumn":26},{"ruleId":"54","severity":1,"message":"58","line":2,"column":28,"nodeType":"56","messageId":"57","endLine":2,"endColumn":36},{"ruleId":"54","severity":1,"message":"59","line":2,"column":38,"nodeType":"56","messageId":"57","endLine":2,"endColumn":44},{"ruleId":"54","severity":1,"message":"60","line":3,"column":29,"nodeType":"56","messageId":"57","endLine":3,"endColumn":35},{"ruleId":"54","severity":1,"message":"59","line":1,"column":38,"nodeType":"56","messageId":"57","endLine":1,"endColumn":44},{"ruleId":"54","severity":1,"message":"61","line":2,"column":27,"nodeType":"56","messageId":"57","endLine":2,"endColumn":33},{"ruleId":"54","severity":1,"message":"62","line":4,"column":9,"nodeType":"56","messageId":"57","endLine":4,"endColumn":22},{"ruleId":"54","severity":1,"message":"63","line":4,"column":23,"nodeType":"56","messageId":"57","endLine":4,"endColumn":28},{"ruleId":"54","severity":1,"message":"60","line":4,"column":29,"nodeType":"56","messageId":"57","endLine":4,"endColumn":35},{"ruleId":"64","severity":1,"message":"65","line":32,"column":5,"nodeType":"66","endLine":32,"endColumn":7,"suggestions":"67"},{"ruleId":"54","severity":1,"message":"68","line":2,"column":10,"nodeType":"56","messageId":"57","endLine":2,"endColumn":14},{"ruleId":"54","severity":1,"message":"69","line":2,"column":16,"nodeType":"56","messageId":"57","endLine":2,"endColumn":22},{"ruleId":"54","severity":1,"message":"70","line":2,"column":29,"nodeType":"56","messageId":"57","endLine":2,"endColumn":39},{"ruleId":"54","severity":1,"message":"71","line":2,"column":41,"nodeType":"56","messageId":"57","endLine":2,"endColumn":44},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRef' is defined but never used.","'Switch' is defined but never used.","'Button' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'MainMovieImage'. Either include it or remove the dependency array. You can also do a functional update 'setMainMovieImage(M => ...)' if you only need 'MainMovieImage' in the 'setMainMovieImage' call.","ArrayExpression",["74"],"'Card' is defined but never used.","'Avatar' is defined but never used.","'Typography' is defined but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [MainMovieImage]",{"range":"77","text":"78"},[1133,1135],"[MainMovieImage]"]